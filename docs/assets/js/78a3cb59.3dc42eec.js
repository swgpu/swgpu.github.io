"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3063],{7720:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>h,contentTitle:()=>o,default:()=>x,frontMatter:()=>l,metadata:()=>t,toc:()=>d});var r=s(4848),i=s(8453);const l={},o="Gfx3PhysicsJNM",t={id:"Module Gfx3/Gfx3PhysicsJNM",title:"Gfx3PhysicsJNM",description:"A 3D navigation mesh.",source:"@site/docs/Module Gfx3/Gfx3PhysicsJNM.md",sourceDirName:"Module Gfx3",slug:"/Module Gfx3/Gfx3PhysicsJNM",permalink:"/docs/Module Gfx3/Gfx3PhysicsJNM",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Module Gfx3/Gfx3PhysicsJNM.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Gfx3ParticlesRenderer",permalink:"/docs/Module Gfx3/Gfx3ParticlesRenderer"},next:{title:"Gfx3PhysicsJWM",permalink:"/docs/Module Gfx3/Gfx3PhysicsJWM"}},h={},d=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2}];function c(n){const e={br:"br",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"gfx3physicsjnm",children:"Gfx3PhysicsJNM"})}),"\n",(0,r.jsx)(e.p,{children:"A 3D navigation mesh.\r\nIn collision case, the collision response sliding along wall polygons to keep a good feeling for the player."}),"\n",(0,r.jsx)(e.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"new Gfx3PhysicsJNM"}),"(): Gfx3PhysicsJNM"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"$getElevation"}),"(frags: Frag[], point: vec3)"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"frags"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"point"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"$moveXZ"}),"(center: vec3, frags: Frag[], point: vec3, move: vec2, i: number)"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"center"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"frags"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"point"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"move"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"i"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"box"}),"(x: number, y: number, z: number, radius: number, height: number, mx: number, my: number, mz: number, lift: number, snapFloor: boolean, snapFloorDistance: number, marginBox: number): ResBox",(0,r.jsx)(e.br,{}),"\nReturns a new move with smooth sliding along wall and floor for the given box.\r\nInfos are composed to a move vector, a wall collide flag and floor collide flag."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"x"}),": The x position of the box center."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"y"}),": The y position of the box center."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"z"}),": The z position of the box center."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"radius"}),": The radius of the box."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"height"}),": The height of the box."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"mx"}),": The movement in the x-axis."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"my"}),": The movement in the y-axis."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"mz"}),": The movement in the z-axis."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"lift"}),": The lift is used to elevate the virtual bounding box to let passing over little step or micro obstacles on the floor."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"snapFloor"}),": Enable or disable floor snapping."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"snapFloorDistance"}),": Minimum distance to snap the floor."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"marginBox"}),": The margin is used to add more space to the virtual bounding box to collide wall collide earlier."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"draw"}),"(): void",(0,r.jsx)(e.br,{}),"\nThe draw function."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"enableDebugBsp"}),"(enabled: boolean): void",(0,r.jsx)(e.br,{}),"\nEnable the debug bsp display."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"enabled"}),": The enabled flag."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"enableDebugMesh"}),"(enabled: boolean): void",(0,r.jsx)(e.br,{}),"\nEnable the debug mesh display."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"enabled"}),": The enabled flag."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getBinaryTree"}),"(): Gfx3TreePartition",(0,r.jsx)(e.br,{}),"\nReturns the btree."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getElevation"}),"(x: number, y: number, z: number, radius: number, height: number, mx: number, mz: number): ResElevation",(0,r.jsx)(e.br,{}),"\nReturns a new y-move to fix the point on the floor.\r\nNote: Utility used to handle collisions manually for full flexibility."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"x"}),": The x position of sensor."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"y"}),": The y position of sensor."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"z"}),": The z position of sensor."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"radius"}),": The radius of sensor area."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"height"}),": The height of sensor area."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"mx"}),": The movement in x-axis."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"mz"}),": The movement in z-axis."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getSectorData"}),"(fragIndex: number): any",(0,r.jsx)(e.br,{}),"\nReturn frag data."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"fragIndex"}),": The frag index."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"isDebugBspEnabled"}),"(): boolean",(0,r.jsx)(e.br,{}),"\nCheck if bsp debugging is enabled."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"isDebugMeshEnabled"}),"(): boolean",(0,r.jsx)(e.br,{}),"\nCheck if mesh debugging is enabled."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"loadFromFile"}),"(path: string, bspMaxChildren: number, bspMaxDepth: number): Promise",(0,r.jsx)(e.br,{}),"\nLoad asynchronously navmesh data from a json file (jnm)."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"path"}),": The file path."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"bspMaxChildren"}),": The maximum of children per bsp node."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"bspMaxDepth"}),": The maximum depth for bsp tree."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"raycast"}),"(origin: vec3, dir: vec3, radius: number, height: number)",(0,r.jsx)(e.br,{}),"\nReturns the ray hit point or null if no hit occured.\r\nNote: Utility used to handle collisions manually for full flexibility."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"origin"}),": The ray origin."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"dir"}),": The ray direction."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"radius"}),": The radius of ray area."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"height"}),": The height of ray area."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"update"}),"(ts: number): void",(0,r.jsx)(e.br,{}),"\nThe update function."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"ts"})}),"\n"]}),"\n"]}),"\n"]})]})}function x(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>t});var r=s(6540);const i={},l=r.createContext(i);function o(n){const e=r.useContext(l);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),r.createElement(l.Provider,{value:e},n.children)}}}]);
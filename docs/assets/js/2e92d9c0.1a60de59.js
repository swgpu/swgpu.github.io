"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4485],{3565:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var s=r(4848),t=r(8453);const i={},o="AIMinMaxSolver",l={id:"Module Ai/AIMinMaxSolver",title:"AIMinMaxSolver",description:"Solves an MinMax tree.",source:"@site/docs/Module Ai/AIMinMaxSolver.md",sourceDirName:"Module Ai",slug:"/Module Ai/AIMinMaxSolver",permalink:"/docs/docs/Module Ai/AIMinMaxSolver",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Module Ai/AIMinMaxSolver.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AIMinMaxNode",permalink:"/docs/docs/Module Ai/AIMinMaxNode"},next:{title:"AIMinMaxTreeAbstract",permalink:"/docs/docs/Module Ai/AIMinMaxTreeAbstract"}},a={},d=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2}];function c(e){const n={br:"br",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"aiminmaxsolver",children:"AIMinMaxSolver"})}),"\n",(0,s.jsx)(n.p,{children:"Solves an MinMax tree."}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"new AIMinMaxSolver"}),"(): AIMinMaxSolver"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"$generateValues"}),"(parentNode: AIMinMaxTreeAbstract, isMaxPlayer: boolean, alpha: number, beta: number): AIMinMaxTreeAbstract",(0,s.jsx)(n.br,{}),"\nBubbling the nodes values and returns the MinMax tree."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"parentNode"}),": The scored graph."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"isMaxPlayer"}),": A boolean value indicating whether the current player is the maximizing player or not."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"alpha"}),": The alpha."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"beta"}),": The beta."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"solve"}),"(node: AIMinMaxNode): AIMinMaxTreeAbstract",(0,s.jsx)(n.br,{}),"\nSolves MinMax tree and return the node with the maximum value among its direct children."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"node"}),": The scored graph."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(6540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);
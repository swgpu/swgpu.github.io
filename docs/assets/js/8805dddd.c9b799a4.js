"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[882],{5397:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var i=s(4848),r=s(8453);const t={},o="AIPathGrid2D",l={id:"Module Ai/AIPathGrid2D",title:"AIPathGrid2D",description:"A 2D grid representation.",source:"@site/docs/Module Ai/AIPathGrid2D.md",sourceDirName:"Module Ai",slug:"/Module Ai/AIPathGrid2D",permalink:"/docs/docs/Module Ai/AIPathGrid2D",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Module Ai/AIPathGrid2D.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AIPathGrid",permalink:"/docs/docs/Module Ai/AIPathGrid"},next:{title:"AIPathGrid3D",permalink:"/docs/docs/Module Ai/AIPathGrid3D"}},d={},c=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2}];function h(e){const n={br:"br",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"aipathgrid2d",children:"AIPathGrid2D"})}),"\n",(0,i.jsx)(n.p,{children:"A 2D grid representation."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"inherit from: AIPathGrid"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"new AIPathGrid2D"}),"(size: vec2, grid: number[]): AIPathGrid2D\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"size"}),": The grid size."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"grid"}),": The grid data."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getDirections"}),"(a: vec2, b: vec2)",(0,i.jsx)(n.br,{}),"\nReturn all ortho vectors between two positions fitting from nearest to farest the direction."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"a"}),": The cell position A."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"b"}),": The cell position B."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getValue"}),"(pos: vec2): number",(0,i.jsx)(n.br,{}),"\nReturn value of cell."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"pos"}),": The cell position."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"isInside"}),"(pos: vec2): boolean",(0,i.jsx)(n.br,{}),"\nCheck if position is inside the grid."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"pos"}),": The cell position."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"isSame"}),"(a: vec2, b: vec2): boolean",(0,i.jsx)(n.br,{}),"\nCheck if position A and position B are same."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"a"}),": The cell position A."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"b"}),": The cell position B."]}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);
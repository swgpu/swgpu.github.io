"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6740],{3564:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(4848),i=n(8453);const o={},s="Gfx3TreePartition",a={id:"Module Gfx3/Gfx3TreePartition",title:"Gfx3TreePartition",description:"A 3D binary tree space partition.",source:"@site/docs/Module Gfx3/Gfx3TreePartition.md",sourceDirName:"Module Gfx3",slug:"/Module Gfx3/Gfx3TreePartition",permalink:"/docs/docs/Module Gfx3/Gfx3TreePartition",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Module Gfx3/Gfx3TreePartition.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Gfx3Transformable",permalink:"/docs/docs/Module Gfx3/Gfx3Transformable"},next:{title:"Gfx3TreePartitionMethod",permalink:"/docs/docs/Module Gfx3/Gfx3TreePartitionMethod"}},d={},c=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2}];function l(e){const t={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"gfx3treepartition",children:"Gfx3TreePartition"})}),"\n",(0,r.jsx)(t.p,{children:"A 3D binary tree space partition."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"inherit from: TreePartition"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"new Gfx3TreePartition"}),"(maxChildren: number, maxDepth: number, aabb: Gfx3BoundingBox): Gfx3TreePartition\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"maxChildren"}),": The maximum number of children that a node in the tree can have. It determines the branching factor of the tree, i.e."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"maxDepth"}),": The maximum depth or level of the tree partition. It determines how deep the tree can be divided into smaller partitions."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"aabb"}),": The top bounding box of the tree partition space."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(6540);const i={},o=r.createContext(i);function s(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5759],{4124:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>x,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var r=s(4848),i=s(8453);const t={},c="Gfx2BoundingRect",o={id:"Module Gfx2/Gfx2BoundingRect",title:"Gfx2BoundingRect",description:"A 2D bounding rectangle.",source:"@site/docs/Module Gfx2/Gfx2BoundingRect.md",sourceDirName:"Module Gfx2",slug:"/Module Gfx2/Gfx2BoundingRect",permalink:"/docs/Module Gfx2/Gfx2BoundingRect",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Module Gfx2/Gfx2BoundingRect.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DNASystem",permalink:"/docs/Module Dna/DNASystem"},next:{title:"Gfx2Drawable",permalink:"/docs/Module Gfx2/Gfx2Drawable"}},l={},d=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2}];function h(n){const e={br:"br",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"gfx2boundingrect",children:"Gfx2BoundingRect"})}),"\n",(0,r.jsx)(e.p,{children:"A 2D bounding rectangle."}),"\n",(0,r.jsx)(e.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"new Gfx2BoundingRect"}),"(min: vec2, max: vec2): Gfx2BoundingRect\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"min"}),": The minimum point of the bounding rectangle."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"max"}),": The maximum point of the bounding rectangle."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"fromVertices"}),"(vertices: number[]): void",(0,r.jsx)(e.br,{}),"\nTakes a list of vertices and set the new minimum and maximum values."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"vertices"}),": The list of vertices. Each pair of numbers represents the x and y coordinates of a point."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getCenter"}),"(): vec2",(0,r.jsx)(e.br,{}),"\nReturns the center point of the rectangle."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getHeight"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the height."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getPerimeter"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the perimeter of the rectangle."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getRadius"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the radius of a circumscribed circle to the rectangle."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getSize"}),"(): vec2",(0,r.jsx)(e.br,{}),"\nReturns the width and height of the rectangle."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getVolume"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the volume of a the rectangle."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getWidth"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the width."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"intersectBoundingRect"}),"(aabr: Gfx2BoundingRect): boolean",(0,r.jsx)(e.br,{}),"\nChecks if two bounding rectangles intersect."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"aabr"}),": The second rectangle."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"isPointInside"}),"(x: number, y: number): boolean",(0,r.jsx)(e.br,{}),"\nChecks if a given point is inside the rectangle."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"x"}),": The x-coordinate of the point."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"y"}),": The y-coordinate of the point."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"merge"}),"(rect: Gfx2BoundingRect): Gfx2BoundingRect",(0,r.jsx)(e.br,{}),"\nMerge and returns the union of two rectangles."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"rect"}),": The second rectangle."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"splitHorizontal"}),"()",(0,r.jsx)(e.br,{}),"\nSplit the bounding box on y-axis and returns boxes for each side."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"splitVertical"}),"()",(0,r.jsx)(e.br,{}),"\nSplit the bounding box on x-axis and returns boxes for each side."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"transform"}),"(matrix: mat3): Gfx2BoundingRect",(0,r.jsx)(e.br,{}),"\nReturns the transformed bounding rectangle."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"matrix"}),": Used to transform the points of the bounding rectangle."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"static"})," ",(0,r.jsx)(e.strong,{children:"createFrom"}),"(minx: number, miny: number, maxx: number, maxy: number): Gfx2BoundingRect",(0,r.jsx)(e.br,{}),"\nCreates a new instance from min & max."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"minx"}),": The minimum x-coordinate of the bounding rectangle."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"miny"}),": The minimum y-coordinate of the bounding rectangle."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"maxx"}),": The maximum x-coordinate of the bounding rectangle."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"maxy"}),": The maximum y-coordinate of the bounding rectangle."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"static"})," ",(0,r.jsx)(e.strong,{children:"createFromCenter"}),"(x: number, y: number, w: number, h: number): Gfx2BoundingRect",(0,r.jsx)(e.br,{}),"\nCreates a new instance from center coordinates & size."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"x"}),": The x-coordinate of the center of the bounding rectangle."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"y"}),": The y-coordinate of the center of the bounding rectangle."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"w"}),": The width of the bounding rectangle."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"h"}),": The height of the bounding rectangle."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"static"})," ",(0,r.jsx)(e.strong,{children:"createFromCoord"}),"(x: number, y: number, w: number, h: number): Gfx2BoundingRect",(0,r.jsx)(e.br,{}),"\nCreates a new instance from coordinates & size."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"x"}),": The x-coordinate of the top-left corner of the bounding rectangle."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"y"}),": The y-coordinate of the top-left corner of the bounding rectangle."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"w"}),": The width of the bounding rectangle."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"h"}),": The height of the bounding rectangle."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"static"})," ",(0,r.jsx)(e.strong,{children:"createFromVertices"}),"(vertices: number[]): Gfx2BoundingRect",(0,r.jsx)(e.br,{}),"\nTakes a list of vertices and set the new minimum and maximum values."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"vertices"}),": The list of vertices. Each pair of numbers represents the x and y coordinates of a point."]}),"\n"]}),"\n"]}),"\n"]})]})}function x(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>c,x:()=>o});var r=s(6540);const i={},t=r.createContext(i);function c(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:c(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);
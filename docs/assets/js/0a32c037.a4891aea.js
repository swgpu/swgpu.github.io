"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4886],{6273:(n,s,e)=>{e.r(s),e.d(s,{assets:()=>t,contentTitle:()=>c,default:()=>a,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var r=e(4848),i=e(8453);const l={},c="ScriptMachine",d={id:"Module Script/ScriptMachine",title:"ScriptMachine",description:"Is a script machine that parse and execute blocks from a JSON file.",source:"@site/docs/Module Script/ScriptMachine.md",sourceDirName:"Module Script",slug:"/Module Script/ScriptMachine",permalink:"/docs/Module Script/ScriptMachine",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Module Script/ScriptMachine.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ScreenManager",permalink:"/docs/Module Screen/ScreenManager"},next:{title:"SoundManager",permalink:"/docs/Module Sound/SoundManager"}},t={},o=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2}];function h(n){const s={br:"br",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"scriptmachine",children:"ScriptMachine"})}),"\n",(0,r.jsx)(s.p,{children:"Is a script machine that parse and execute blocks from a JSON file."}),"\n",(0,r.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"new ScriptMachine"}),"(): ScriptMachine"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"$delay"}),"(ms: number): void"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"ms"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"$execIf"}),"(varloc: string, cond: string, value: any, cmd): void"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"varloc"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"cond"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"value"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"cmd"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"$goto"}),"(jumpto: string): string"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"jumpto"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"$gotoIf"}),"(varloc: string, cond: string, value: any, jumpto: string)"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"varloc"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"cond"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"value"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"jumpto"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"$varAdd"}),"(varloc: string, value: any): void"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"varloc"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"value"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"$varSet"}),"(varloc: string, value: any): void"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"varloc"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"value"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"$varSub"}),"(varloc: string, value: any): void"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"varloc"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"value"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"$waitPad"}),"(): void"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"addVariant"}),"(varloc: string, value: any): void",(0,r.jsx)(s.br,{}),"\nAdd a new variable."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"varloc"}),": The var name."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"value"}),": The value."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"clearCommandRegister"}),"(): void",(0,r.jsx)(s.br,{}),"\nFlush the command register."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"getVariant"}),"(varloc: string): any",(0,r.jsx)(s.br,{}),"\nReturns variable value."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"varloc"}),": The var name."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"hasVariant"}),"(varloc: string): boolean",(0,r.jsx)(s.br,{}),"\nCheck variable existing."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"varloc"}),": The var name."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"isEnabled"}),"(): boolean",(0,r.jsx)(s.br,{}),"\nCheck if the script machine is enabled or not."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"jump"}),"(blockId: string): void",(0,r.jsx)(s.br,{}),"\nJump to the specified script file block."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"blockId"}),": The block identifier."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"loadFromFile"}),"(path: string): Promise",(0,r.jsx)(s.br,{}),"\nLoad asynchronously script data from a json file (jsc)."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"path"}),": The file path."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"loadVariantFromData"}),"(data: any): void",(0,r.jsx)(s.br,{}),"\nLoad variants from data object."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"data"}),": The data object."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"loadVariantFromFile"}),"(path: string): Promise",(0,r.jsx)(s.br,{}),"\nLoad asynchronously variants data from a json file (jsv)."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"path"}),": The file path."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"registerCommand"}),"(key: string, commandFunc: Function): void",(0,r.jsx)(s.br,{}),"\nRegisters a command."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"key"}),": The unique identifier for the command (aka the command name)."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"commandFunc"}),": The command function to be registered."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"removeVariant"}),"(varloc: string): void",(0,r.jsx)(s.br,{}),"\nRemove a variable."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"varloc"}),": The var name."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"runCommand"}),"(key: string, args: any[])",(0,r.jsx)(s.br,{}),"\nExecutes a registered command and returns the block to jump."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"key"}),": The command identifier."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"args"}),": A list of arguments that will be passed to the command function."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"setEnabled"}),"(enabled: boolean): void",(0,r.jsx)(s.br,{}),"\nSet the enable flag."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"enabled"}),": Indicating whether the script machine is enabled or disabled."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"setVariant"}),"(varloc: string, value: any): void",(0,r.jsx)(s.br,{}),"\nSet variable value."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"varloc"}),": The var name."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"value"}),": The value."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"update"}),"(ts: number): void",(0,r.jsx)(s.br,{}),"\nThe update function."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"ts"}),": The timestep."]}),"\n"]}),"\n"]}),"\n"]})]})}function a(n={}){const{wrapper:s}={...(0,i.R)(),...n.components};return s?(0,r.jsx)(s,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}},8453:(n,s,e)=>{e.d(s,{R:()=>c,x:()=>d});var r=e(6540);const i={},l=r.createContext(i);function c(n){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof n?n(s):{...s,...n}}),[s,n])}function d(n){let s;return s=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:c(n.components),r.createElement(l.Provider,{value:s},n.children)}}}]);
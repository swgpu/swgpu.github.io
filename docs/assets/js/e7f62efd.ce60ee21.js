"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[606],{4535:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var r=s(4848),i=s(8453);const t={},l="Gfx2Manager",c={id:"Module Gfx2/Gfx2Manager",title:"Gfx2Manager",description:"Singleton 2D graphics manager.",source:"@site/docs/Module Gfx2/Gfx2Manager.md",sourceDirName:"Module Gfx2",slug:"/Module Gfx2/Gfx2Manager",permalink:"/docs/Module Gfx2/Gfx2Manager",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Module Gfx2/Gfx2Manager.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Gfx2IsoTileMapLayer",permalink:"/docs/Module Gfx2/Gfx2IsoTileMapLayer"},next:{title:"Gfx2Particles",permalink:"/docs/Module Gfx2/Gfx2Particles"}},o={},a=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2}];function h(n){const e={br:"br",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"gfx2manager",children:"Gfx2Manager"})}),"\n",(0,r.jsx)(e.p,{children:"Singleton 2D graphics manager."}),"\n",(0,r.jsx)(e.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"new Gfx2Manager"}),"(): Gfx2Manager"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"beginDrawing"}),"(): void",(0,r.jsx)(e.br,{}),"\nBegin the draw phase. Prepares the canvas for drawing.\r\nWarning: You need to call this method before any draw calls."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"endDrawing"}),"(): void",(0,r.jsx)(e.br,{}),"\nEnd the draw phase."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"findCanvasPosFromClientPos"}),"(clientX: number, clientY: number): vec2",(0,r.jsx)(e.br,{}),"\nReturns canvas-space position from the the client-space position."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"clientX"}),": The horizontal client coordinate."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"clientY"}),": The vertical client coordinate."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"findWorldPosFromClientPos"}),"(clientX: number, clientY: number): vec2",(0,r.jsx)(e.br,{}),"\nReturns the world-space position from the client-space position."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"clientX"}),": The horizontal client coordinate."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"clientY"}),": The vertical client coordinate."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getBgColor"}),"(): vec4",(0,r.jsx)(e.br,{}),"\nReturns the background color."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getCameraPosition"}),"(): vec2",(0,r.jsx)(e.br,{}),"\nReturns the camera position."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getCameraPositionX"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the X coordinate of the camera position."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getCameraPositionY"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the Y coordinate of the camera position."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getCameraRotation"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the camera rotation angle in radians."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getCameraScale"}),"(): vec2",(0,r.jsx)(e.br,{}),"\nReturns the camera scale."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getCameraScaleX"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the camera scale factor on x-axis."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getCameraScaleY"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the camera scale factor on y-axis."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getCameraTransform"}),"(): mat3",(0,r.jsx)(e.br,{}),"\nReturns the camera transformation matrix."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getContext"}),"(): CanvasRenderingContext2D",(0,r.jsx)(e.br,{}),"\nReturns the 2D rendering context of the canvas element."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getDefaultTexture"}),"(): HTMLImageElement",(0,r.jsx)(e.br,{}),"\nReturns a default HTMLImageElement."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getHeight"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the resolution height of the canvas."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"getWidth"}),"(): number",(0,r.jsx)(e.br,{}),"\nReturns the resolution width of the canvas."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"hasFilter"}),"(): boolean",(0,r.jsx)(e.br,{}),"\nChecks if the canvas element has an active filter."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"moveCamera"}),"(x: number, y: number): void",(0,r.jsx)(e.br,{}),"\nMove the camera."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"x"}),": The move in x-axis direction."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"y"}),": The move in y-axis direction."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"setBgColor"}),"(r: number, g: number, b: number, a: number): void",(0,r.jsx)(e.br,{}),"\nSets the background color using the provided RGBA values (0 - 255)."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"r"}),": The red component."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"g"}),": The green component."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"b"}),": The blue component."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"a"}),": The alpha value."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"setCameraPosition"}),"(x: number, y: number): void",(0,r.jsx)(e.br,{}),"\nSets the camera position."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"x"}),": The x-coordinate."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"y"}),": The y-coordinate."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"setCameraRotation"}),"(cameraRotation: number): void",(0,r.jsx)(e.br,{}),"\nSets the rotation of the camera."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"cameraRotation"}),": The camera rotation angle in radians."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"setCameraScale"}),"(x: number, y: number): void",(0,r.jsx)(e.br,{}),"\nSets the camera scale."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"x"}),": The scale factor for the camera in the x-axis."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"y"}),": The scale factor for the camera in the y-axis."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"setCameraTransform"}),"(cameraTransform: mat3): void",(0,r.jsx)(e.br,{}),"\nSet the camera transformation matrix (before position/rotation/scale)."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"cameraTransform"}),": The transformation matrix."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"setFilter"}),"(filter: string): void",(0,r.jsx)(e.br,{}),"\nSets the css filter property of the canvas."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"filter"}),": The filter parameter is a string that represents the CSS filter property's value.\r\nIt can be used to apply various visual effects to an element, such as blur, brightness, contrast,\r\ngrayscale, etc."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"update"}),"(ts: number): void",(0,r.jsx)(e.br,{}),"\nThe update function."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"ts"}),": The timestep."]}),"\n"]}),"\n"]}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>c});var r=s(6540);const i={},t=r.createContext(i);function l(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);